name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  setup:
    name: Setup Python and UV Venv
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.8'

    - name: Install uv, create & activate venv
      run: |
        pip install uv
        uv venv
        source .venv/bin/activate

    - name: Install shared dependencies
      run: |
        source .venv/bin/activate
        uv pip install ruff mypy requests

    - name: Save venv as artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-venv
        path: .venv/
        retention-days: 1
        if-no-files-found: error

  lint:
    name: Lint Code
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download venv
      uses: actions/download-artifact@v3
      with:
        name: python-venv
        path: .venv

    - name: Make venv executable
      run: chmod -R 755 .venv/bin

    - name: Run Ruff
      run: |
        source .venv/bin/activate
        uv run ruff check . \
          --verbose \
          --config pyproject.toml

    - name: Run MyPy
      run: |
        source .venv/bin/activate
        uv run mypy app.py \
          --config pyproject.toml \
          --disable-error-code attr-defined

  health_check:
    name: Health Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download venv
      uses: actions/download-artifact@v3
      with:
        name: python-venv
        path: .venv

    - name: Make venv executable
      run: chmod -R 755 .venv/bin

    - name: Run health check
      run: |
        source .venv/bin/activate
        python tests/health_check.py
